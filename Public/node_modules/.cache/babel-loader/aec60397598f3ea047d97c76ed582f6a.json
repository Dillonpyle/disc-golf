{"ast":null,"code":"import _classCallCheck from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/computer/homework/React-API/fullstack-react/src/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport MapContainer from './components/MapContainer';\nimport Login from './Login/Login';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"loadMap\",\n    value: function loadMap() {\n      if (this.props && this.props.google) {\n        // checks if google is available\n        var google = this.props.google;\n        var maps = google.maps;\n        var mapRef = this.refs.map; // reference to the actual DOM element\n\n        var node = ReactDOM.findDOMNode(mapRef);\n        var zoom = this.props.zoom;\n        var _this$state$currentLo = this.state.currentLocation,\n            lat = _this$state$currentLo.lat,\n            lng = _this$state$currentLo.lng;\n        var center = new maps.LatLng(lat, lng);\n        var mapConfig = Object.assign({}, {\n          center: center,\n          zoom: zoom\n        }); // maps.Map() is constructor that instantiates the map\n\n        this.map = new maps.Map(node, mapConfig);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition(function (pos) {\n            var coords = pos.coords;\n\n            _this.setState({\n              currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n              }\n            });\n          });\n        }\n      }\n\n      this.loadMap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/map\",\n        component: MapContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/computer/homework/React-API/fullstack-react/src/App.js"],"names":["React","Component","Route","Switch","ReactDOM","MapContainer","Login","App","props","google","maps","mapRef","refs","map","node","findDOMNode","zoom","state","currentLocation","lat","lng","center","LatLng","mapConfig","Object","assign","Map","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","loadMap"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;8BAEM;AACR,UAAI,KAAKC,KAAL,IAAc,KAAKA,KAAL,CAAWC,MAA7B,EAAqC;AACnC;AADmC,YAE3BA,MAF2B,GAEhB,KAAKD,KAFW,CAE3BC,MAF2B;AAGnC,YAAMC,IAAI,GAAGD,MAAM,CAACC,IAApB;AAEA,YAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUC,GAAzB,CALmC,CAOnC;;AACA,YAAMC,IAAI,GAAGV,QAAQ,CAACW,WAAT,CAAqBJ,MAArB,CAAb;AARmC,YAU7BK,IAV6B,GAUpB,KAAKR,KAVe,CAU7BQ,IAV6B;AAAA,oCAWd,KAAKC,KAAL,CAAWC,eAXG;AAAA,YAW3BC,GAX2B,yBAW3BA,GAX2B;AAAA,YAWtBC,GAXsB,yBAWtBA,GAXsB;AAYnC,YAAMC,MAAM,GAAG,IAAIX,IAAI,CAACY,MAAT,CAAgBH,GAAhB,EAAqBC,GAArB,CAAf;AACA,YAAMG,SAAS,GAAGC,MAAM,CAACC,MAAP,CAChB,EADgB,EAEhB;AACEJ,UAAAA,MAAM,EAAEA,MADV;AAEEL,UAAAA,IAAI,EAAEA;AAFR,SAFgB,CAAlB,CAbmC,CAqBnC;;AACA,aAAKH,GAAL,GAAW,IAAIH,IAAI,CAACgB,GAAT,CAAaZ,IAAb,EAAmBS,SAAnB,CAAX;AACD;AACF;;;wCAEmB;AAAA;;AAElB,UAAI,KAAKf,KAAL,CAAWmB,2BAAf,EAA4C;AAC1C,YAAIC,SAAS,IAAIA,SAAS,CAACC,WAA3B,EAAwC;AACtCD,UAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,GAAG,EAAI;AAC9C,gBAAMC,MAAM,GAAGD,GAAG,CAACC,MAAnB;;AACA,YAAA,KAAI,CAACC,QAAL,CAAc;AACZf,cAAAA,eAAe,EAAE;AACfC,gBAAAA,GAAG,EAAEa,MAAM,CAACE,QADG;AAEfd,gBAAAA,GAAG,EAAEY,MAAM,CAACG;AAFG;AADL,aAAd;AAMD,WARD;AASD;AACF;;AAED,WAAKC,OAAL;AAED;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAE9B,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,SAAS,EAAED,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF;AAQD;;;;EA1DeJ,S;;AA6DlB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ReactDOM from 'react-dom'\nimport MapContainer from './components/MapContainer';\nimport Login from './Login/Login';\n\nimport './App.css';\n\nclass App extends Component {\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      // reference to the actual DOM element\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n\n      // maps.Map() is constructor that instantiates the map\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  componentDidMount() {\n\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n\n    this.loadMap();\n\n  }\n\n  render() {\n    return (\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/map\" component={MapContainer} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}