{"ast":null,"code":"var _jsxFileName = \"/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/CurrentForcast.js\";\nimport React from 'react';\nimport './Weather.css';\n\nvar CurrentForcast = function CurrentForcast(_ref) {\n  var CurrentForcast = _ref.CurrentForcast;\n  console.log(CurrentForcast[0]); //converts UNIX time into military time\n\n  var a = new Date(CurrentForcast[0].time * 1000);\n  var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = a.getHours();\n  var min = a.getMinutes();\n  var sec = a.getSeconds();\n  var formattedTime = month + ' ' + date + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n  var deg = CurrentForcast[0].windBearing;\n\n  if (deg > 11.25 && deg < 33.75) {\n    var direction = \"NNE\";\n  } else if (deg > 33.75 && deg < 56.25) {\n    var direction = \"ENE\";\n  } else if (deg > 56.25 && deg < 78.75) {\n    var direction = \"East\";\n  } else if (deg > 78.75 && deg < 101.25) {\n    var direction = \"ESE\";\n  } else if (deg > 101.25 && deg < 123.75) {\n    var direction = \"ESE\";\n  } else if (deg > 123.75 && deg < 146.25) {\n    var direction = \"SE\";\n  } else if (deg > 146.25 && deg < 168.75) {\n    var direction = \"SSE\";\n  } else if (deg > 168.75 && deg < 191.25) {\n    var direction = \"South\";\n  } else if (deg > 191.25 && deg < 213.75) {\n    var direction = \"SSW\";\n  } else if (deg > 213.75 && deg < 236.25) {\n    var direction = \"SW\";\n  } else if (deg > 236.25 && deg < 258.75) {\n    var direction = \"WSW\";\n  } else if (deg > 258.75 && deg < 281.25) {\n    var direction = \"West\";\n  } else if (deg > 281.25 && deg < 303.75) {\n    var direction = \"WNW\";\n  } else if (deg > 303.75 && deg < 326.25) {\n    var direction = \"NW\";\n  } else if (deg > 326.25 && deg < 348.75) {\n    var direction = \"NNW\";\n  } else {\n    var direction = \"North\";\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, formattedTime), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, CurrentForcast[0].apparentTemperature), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, CurrentForcast[0].windSpeed, \" MPH \", direction), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, CurrentForcast[0].summary));\n};\n\nexport default CurrentForcast;","map":{"version":3,"sources":["/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/CurrentForcast.js"],"names":["React","CurrentForcast","console","log","a","Date","time","months","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","formattedTime","deg","windBearing","direction","apparentTemperature","windSpeed","summary"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Weather.css'\n\n\nconst CurrentForcast = ({ CurrentForcast }) => {\n\n    console.log(CurrentForcast[0])\n    //converts UNIX time into military time\n    let a = new Date(CurrentForcast[0].time * 1000);\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let date = a.getDate();\n    let hour = a.getHours();\n    let min = a.getMinutes();\n    let sec = a.getSeconds();\n    let formattedTime = month + ' ' + date + ' ' + year + ' ' + hour + ':' + min + ':' + sec;\n\n    let deg = CurrentForcast[0].windBearing;\n\n    if (deg > 11.25 && deg < 33.75) {\n        var direction = \"NNE\";\n    } else if (deg > 33.75 && deg < 56.25) {\n        var direction = \"ENE\";\n    } else if (deg > 56.25 && deg < 78.75) {\n        var direction = \"East\";\n    } else if (deg > 78.75 && deg < 101.25) {\n        var direction = \"ESE\";\n    } else if (deg > 101.25 && deg < 123.75) {\n        var direction = \"ESE\";\n    } else if (deg > 123.75 && deg < 146.25) {\n        var direction = \"SE\";\n    } else if (deg > 146.25 && deg < 168.75) {\n        var direction = \"SSE\";\n    } else if (deg > 168.75 && deg < 191.25) {\n        var direction = \"South\";\n    } else if (deg > 191.25 && deg < 213.75) {\n        var direction = \"SSW\";\n    } else if (deg > 213.75 && deg < 236.25) {\n        var direction = \"SW\";\n    } else if (deg > 236.25 && deg < 258.75) {\n        var direction = \"WSW\";\n    } else if (deg > 258.75 && deg < 281.25) {\n        var direction = \"West\";\n    } else if (deg > 281.25 && deg < 303.75) {\n        var direction = \"WNW\";\n    } else if (deg > 303.75 && deg < 326.25) {\n        var direction = \"NW\";\n    } else if (deg > 326.25 && deg < 348.75) {\n        var direction = \"NNW\";\n    } else {\n        var direction = \"North\";\n    }\n\n\n\n    return (\n        <div>\n            <h3>{formattedTime}</h3>\n            <h1>{CurrentForcast[0].apparentTemperature}</h1>\n            <h2>{CurrentForcast[0].windSpeed} MPH {direction}</h2>\n            <h2>{CurrentForcast[0].summary}</h2>\n        </div>\n    )\n\n}\nexport default CurrentForcast\n"]},"metadata":{},"sourceType":"module"}