{"ast":null,"code":"import _regeneratorRuntime from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/Weather.js\";\nimport React, { Component } from \"react\";\nimport LocalList from \"./LocalList\";\nimport WeatherForm from \"./WeatherForm\";\nvar API_KEY = \"7e65a726f9556ca15ad913517079de8e\";\n\nvar WeatherContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeatherContainer, _Component);\n\n  function WeatherContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WeatherContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WeatherContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      tempMax: undefined,\n      tempMin: undefined,\n      city: undefined,\n      country: undefined,\n      coord: undefined,\n      humidity: undefined,\n      description: undefined,\n      windSpeed: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"https://api.openweathermap.org/data/2.5/forecast/?q=\".concat(city, \",\").concat(country, \"&cnt=7&appid=\").concat(API_KEY, \"&units=imperial\"));\n\n              case 5:\n                api_call = _context.sent;\n                _context.next = 8;\n                return api_call.json();\n\n              case 8:\n                data = _context.sent;\n\n                if (city && country) {\n                  console.log(data);\n                  console.log(data.list[0].main.temp_min);\n\n                  _this.setState({\n                    temperature: data.list.main.temp,\n                    tempMax: data.list.main.temp_max,\n                    tempMin: data.list.main.temp_min,\n                    city: data.city.name,\n                    country: data.city.country,\n                    coord: data.city.coord,\n                    humidity: data.list.main.humidity,\n                    description: data.weather[0].description,\n                    windSpeed: data.list.wind.speed,\n                    //icon: data.weather.icon,\n                    error: \"\"\n                  });\n                } else {\n                  _this.setState({\n                    temperature: undefined,\n                    tempMax: undefined,\n                    tempMin: undefined,\n                    city: undefined,\n                    country: undefined,\n                    coord: undefined,\n                    humidity: undefined,\n                    description: undefined,\n                    windSpeed: undefined,\n                    error: \"please choose a city and country\"\n                  });\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(WeatherContainer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(WeatherForm, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(LocalList, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        humidity: this.state.humidity,\n        description: this.state.description,\n        error: this.state.error,\n        windSpeed: this.state.windSpeed,\n        icon: this.state.icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return WeatherContainer;\n}(Component);\n\nexport default WeatherContainer;","map":{"version":3,"sources":["/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/Weather.js"],"names":["React","Component","LocalList","WeatherForm","API_KEY","WeatherContainer","state","temperature","undefined","tempMax","tempMin","city","country","coord","humidity","description","windSpeed","error","getWeather","e","preventDefault","target","elements","value","fetch","api_call","json","data","console","log","list","main","temp_min","setState","temp","temp_max","name","weather","wind","speed","icon"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport LocalList from \"./LocalList\";\nimport WeatherForm from \"./WeatherForm\"\n\nconst API_KEY = \"7e65a726f9556ca15ad913517079de8e\";\n\nclass WeatherContainer extends Component {\n    state = {\n        temperature: undefined,\n        tempMax: undefined,\n        tempMin: undefined,\n        city: undefined,\n        country: undefined,\n        coord: undefined,\n        humidity: undefined,\n        description: undefined,\n        windSpeed: undefined,\n        error: undefined\n    }\n\n\n\n    getWeather = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n\n        const api_call = await fetch(`https://api.openweathermap.org/data/2.5/forecast/?q=${city},${country}&cnt=7&appid=${API_KEY}&units=imperial`);\n        const data = await api_call.json();\n\n        if (city && country) {\n            console.log(data);\n            console.log(data.list[0].main.temp_min);\n            this.setState({\n                temperature: data.list.main.temp,\n                tempMax: data.list.main.temp_max,\n                tempMin: data.list.main.temp_min,\n                city: data.city.name,\n                country: data.city.country,\n                coord: data.city.coord,\n                humidity: data.list.main.humidity,\n                description: data.weather[0].description,\n                windSpeed: data.list.wind.speed,\n\n                //icon: data.weather.icon,\n                error: \"\"\n            })\n        } else {\n            this.setState({\n                temperature: undefined,\n                tempMax: undefined,\n                tempMin: undefined,\n                city: undefined,\n                country: undefined,\n                coord: undefined,\n                humidity: undefined,\n                description: undefined,\n                windSpeed: undefined,\n                error: \"please choose a city and country\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <WeatherForm getWeather={this.getWeather} />\n                <LocalList\n                    temperature={this.state.temperature}\n                    city={this.state.city}\n                    country={this.state.country}\n                    humidity={this.state.humidity}\n                    description={this.state.description}\n                    error={this.state.error}\n                    windSpeed={this.state.windSpeed}\n                    icon={this.state.icon}\n                />\n            </div>\n        );\n    }\n}\n\nexport default WeatherContainer;\n"]},"metadata":{},"sourceType":"module"}