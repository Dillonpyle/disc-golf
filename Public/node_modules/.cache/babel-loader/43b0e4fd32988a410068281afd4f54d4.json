{"ast":null,"code":"import _regeneratorRuntime from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/computer/homework/React-API/fullstack-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/computer/homework/React-API/fullstack-react/src/Login/Login.js\";\nimport React, { Component } from 'react';\nexport var Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: '',\n      password: ''\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var loginResponse, parsedResponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch('http://localhost:9000/login', {\n                  method: 'Post',\n                  body: JSON.stringify(_this.state),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                });\n\n              case 4:\n                loginResponse = _context.sent;\n\n                if (loginResponse.ok) {\n                  _context.next = 7;\n                  break;\n                }\n\n                throw Error(loginResponse.statusText);\n\n              case 7:\n                _context.next = 9;\n                return loginResponse.json();\n\n              case 9:\n                parsedResponse = _context.sent;\n                //for routes\n                // if (parsedResponse.data === 'login successful') {\n                //     this.props.history.push('/movies')\n                // }\n                console.log(parsedResponse, 'loginResponse');\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 13]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Username:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Password:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Login;\n}(Component);\nexport default Login;","map":{"version":3,"sources":["/Users/computer/homework/React-API/fullstack-react/src/Login/Login.js"],"names":["React","Component","Login","state","username","password","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","headers","loginResponse","ok","Error","statusText","json","parsedResponse","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,WAAaC,KAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAEIC,KAFJ,GAEY;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFZ;;AAAA,UAOIC,YAPJ,GAOmB,UAACC,CAAD,EAAO;AAClB,YAAKC,QAAL,qBACKD,CAAC,CAACE,MAAF,CAASC,IADd,EACqBH,CAAC,CAACE,MAAF,CAASE,KAD9B;AAGH,KAXL;;AAAA,UAaIC,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAamB,iBAAOL,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXA,gBAAAA,CAAC,CAACM,cAAF;AADW;AAAA;AAAA,uBAGqBC,KAAK,CAAC,6BAAD,EAAgC;AAC7DC,kBAAAA,MAAM,EAAE,MADqD;AAE7DC,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,MAAKf,KAApB,CAFuD;AAG7DgB,kBAAAA,OAAO,EAAE;AACL,oCAAgB;AADX;AAHoD,iBAAhC,CAH1B;;AAAA;AAGDC,gBAAAA,aAHC;;AAAA,oBAWFA,aAAa,CAACC,EAXZ;AAAA;AAAA;AAAA;;AAAA,sBAYGC,KAAK,CAACF,aAAa,CAACG,UAAf,CAZR;;AAAA;AAAA;AAAA,uBAesBH,aAAa,CAACI,IAAd,EAftB;;AAAA;AAeDC,gBAAAA,cAfC;AAiBP;AACA;AACA;AACA;AAEAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ,EAA4B,eAA5B;AAtBO;AAAA;;AAAA;AAAA;AAAA;AAwBPC,gBAAAA,OAAO,CAACC,GAAR;;AAxBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAbnB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAyCa;AACL,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKf,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEF;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,QAAQ,EAAE,KAAKN,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEF;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,QAAQ,EAAE,KAAKA,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,CALJ,EASI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAaH;AAvDL;;AAAA;AAAA,EAA2BL,SAA3B;AA0DA,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react'\n\nexport class Login extends Component {\n\n    state = {\n        username: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const loginResponse = await fetch('http://localhost:9000/login', {\n                method: 'Post',\n                body: JSON.stringify(this.state),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (!loginResponse.ok) {\n                throw Error(loginResponse.statusText)\n            }\n\n            const parsedResponse = await loginResponse.json();\n\n            //for routes\n            // if (parsedResponse.data === 'login successful') {\n            //     this.props.history.push('/movies')\n            // }\n\n            console.log(parsedResponse, 'loginResponse')\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Username:\n              <input type='text' name='username' onChange={this.handleChange} />\n                </label>\n                <label>\n                    Password:\n              <input type='text' name='password' onChange={this.handleChange} />\n                </label>\n                <input type='submit' />\n            </form>\n        )\n    }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}