{"ast":null,"code":"var _jsxFileName = \"/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/DailyForcast.js\";\nimport React from 'react';\n\nvar DailyForcast = function DailyForcast(_ref) {\n  var DailyForcast = _ref.DailyForcast;\n  var dailyForcast = DailyForcast.map(function (day, i) {\n    //converts UNIX time into military time\n    var aHigh = new Date(day.apparentTemperatureHighTime * 1000);\n    var monthsHigh = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var monthHigh = monthsHigh[aHigh.getMonth()];\n    var dateHigh = aHigh.getDate();\n    var highHour = aHigh.getHours();\n\n    if (highHour === 12) {\n      var convertedHighHour = '12PM';\n    } else if (highHour === 13) {\n      var convertedHighHour = '1PM';\n    } else if (highHour === 14) {\n      var convertedHighHour = '2PM';\n    } else if (highHour === 15) {\n      var convertedHighHour = '3PM';\n    } else if (highHour === 16) {\n      var convertedHighHour = '4PM';\n    } else if (highHour === 17) {\n      var convertedHighHour = '5PM';\n    } else if (highHour === 18) {\n      var convertedHighHour = '6PM';\n    } else if (highHour === 19) {\n      var convertedHighHour = '7PM';\n    } else if (highHour === 20) {\n      var convertedHighHour = '8PM';\n    } else if (highHour === 21) {\n      var convertedHighHour = '9PM';\n    } else if (highHour === 22) {\n      var convertedHighHour = '10PM';\n    } else if (highHour === 23) {\n      var convertedHighHour = '11PM';\n    } else if (highHour === 0) {\n      var convertedHighHour = '12AM';\n    } else {\n      var convertedHighHour = highHour + 'AM';\n    }\n\n    var formattedHighTime = monthHigh + ' ' + dateHigh + ' ' + convertedHighHour;\n    console.log(day);\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"High at \", formattedHighTime, \" | Low at \", day.apparentTemperatureLowTime), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, day.apparentTemperatureHigh, \" | \", day.apparentTemperatureLow), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Rain Chance\", day.precipProbability), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Wind Speed \", day.windSpeed, \" | Gust \", day.windGust));\n  });\n  return React.createElement(\"div\", {\n    className: \"dailyForcast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, dailyForcast);\n};\n\nexport default DailyForcast;","map":{"version":3,"sources":["/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/DailyForcast.js"],"names":["React","DailyForcast","dailyForcast","map","day","i","aHigh","Date","apparentTemperatureHighTime","monthsHigh","monthHigh","getMonth","dateHigh","getDate","highHour","getHours","convertedHighHour","formattedHighTime","console","log","apparentTemperatureLowTime","apparentTemperatureHigh","apparentTemperatureLow","precipProbability","windSpeed","windGust"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst DailyForcast = ({ DailyForcast }) => {\n\n    let dailyForcast = DailyForcast.map((day, i) => {\n\n        //converts UNIX time into military time\n        let aHigh = new Date(day.apparentTemperatureHighTime * 1000);\n        let monthsHigh = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let monthHigh = monthsHigh[aHigh.getMonth()];\n        let dateHigh = aHigh.getDate();\n        let highHour = aHigh.getHours();\n\n        if (highHour === 12) {\n            var convertedHighHour = '12PM'\n        } else if (highHour === 13) {\n            var convertedHighHour = '1PM'\n        } else if (highHour === 14) {\n            var convertedHighHour = '2PM'\n        } else if (highHour === 15) {\n            var convertedHighHour = '3PM'\n        } else if (highHour === 16) {\n            var convertedHighHour = '4PM'\n        } else if (highHour === 17) {\n            var convertedHighHour = '5PM'\n        } else if (highHour === 18) {\n            var convertedHighHour = '6PM'\n        } else if (highHour === 19) {\n            var convertedHighHour = '7PM'\n        } else if (highHour === 20) {\n            var convertedHighHour = '8PM'\n        } else if (highHour === 21) {\n            var convertedHighHour = '9PM'\n        } else if (highHour === 22) {\n            var convertedHighHour = '10PM'\n        } else if (highHour === 23) {\n            var convertedHighHour = '11PM'\n        } else if (highHour === 0) {\n            var convertedHighHour = '12AM'\n        } else {\n            var convertedHighHour = highHour + 'AM'\n        }\n\n        let formattedHighTime = monthHigh + ' ' + dateHigh + ' ' + convertedHighHour;\n\n        console.log(day)\n        return (\n            <div key={i} className=\"day\">\n                <h4>High at {formattedHighTime} | Low at {day.apparentTemperatureLowTime}</h4>\n                <h1>{day.apparentTemperatureHigh} | {day.apparentTemperatureLow}</h1>\n                <h3>Rain Chance{day.precipProbability}</h3>\n                <h3>Wind Speed {day.windSpeed} | Gust {day.windGust}</h3>\n            </div>\n        )\n    })\n    return (\n        <div className=\"dailyForcast\">\n            {dailyForcast}\n        </div>\n    )\n\n}\nexport default DailyForcast\n"]},"metadata":{},"sourceType":"module"}