{"ast":null,"code":"var _jsxFileName = \"/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/DailyForcast.js\";\nimport React from 'react';\n\nvar DailyForcast = function DailyForcast(_ref) {\n  var DailyForcast = _ref.DailyForcast;\n  var dailyForcast = DailyForcast.map(function (day, i) {\n    //converts UNIX time into military time\n    var aHigh = new Date(day.apparentTemperatureHighTime * 1000);\n    var monthsHigh = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var monthHigh = monthsHigh[aHigh.getMonth()];\n    var dateHigh = aHigh.getDate();\n    var highHour = aHigh.getHours();\n\n    if (highHour === 12) {\n      var convertedHighHour = '12PM';\n    } else if (highHour === 13) {\n      var convertedHighHour = '1PM';\n    } else if (highHour === 14) {\n      var convertedHighHour = '2PM';\n    } else if (highHour === 15) {\n      var convertedHighHour = '3PM';\n    } else if (highHour === 16) {\n      var convertedHighHour = '4PM';\n    } else if (highHour === 17) {\n      var convertedHighHour = '5PM';\n    } else if (highHour === 18) {\n      var convertedHighHour = '6PM';\n    } else if (highHour === 19) {\n      var convertedHighHour = '7PM';\n    } else if (highHour === 20) {\n      var convertedHighHour = '8PM';\n    } else if (highHour === 21) {\n      var convertedHighHour = '9PM';\n    } else if (highHour === 22) {\n      var convertedHighHour = '10PM';\n    } else if (highHour === 23) {\n      var convertedHighHour = '11PM';\n    } else if (highHour === 0) {\n      var convertedHighHour = '12AM';\n    } else {\n      var convertedHighHour = highHour + 'AM';\n    }\n\n    var formattedHighTime = monthHigh + ' ' + dateHigh + ' ' + convertedHighHour; //converts UNIX time into military time\n\n    var aLow = new Date(day.apparentTemperatureLowTime * 1000);\n    var monthsLow = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var monthLow = monthsLow[aLow.getMonth()];\n    var dateLow = aLow.getDate();\n    var LowHour = aLow.getHours();\n\n    if (LowHour === 12) {\n      var convertedLowHour = '12PM';\n    } else if (LowHour === 13) {\n      var convertedLowHour = '1PM';\n    } else if (LowHour === 14) {\n      var convertedLowHour = '2PM';\n    } else if (LowHour === 15) {\n      var convertedLowHour = '3PM';\n    } else if (LowHour === 16) {\n      var convertedLowHour = '4PM';\n    } else if (LowHour === 17) {\n      var convertedLowHour = '5PM';\n    } else if (LowHour === 18) {\n      var convertedLowHour = '6PM';\n    } else if (LowHour === 19) {\n      var convertedLowHour = '7PM';\n    } else if (LowHour === 20) {\n      var convertedLowHour = '8PM';\n    } else if (LowHour === 21) {\n      var convertedLowHour = '9PM';\n    } else if (LowHour === 22) {\n      var convertedLowHour = '10PM';\n    } else if (LowHour === 23) {\n      var convertedLowHour = '11PM';\n    } else if (LowHour === 0) {\n      var convertedLowHour = '12AM';\n    } else {\n      var convertedLowHour = LowHour + 'AM';\n    }\n\n    var formattedLowTime = monthLow + ' ' + dateLow + ' ' + convertedLowHour;\n    console.log(day);\n    return React.createElement(\"div\", {\n      key: i,\n      className: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"High at \", formattedHighTime, \" | Low at \", formattedLowTime), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, day.apparentTemperatureHigh, \"\\xB0 | \", day.apparentTemperatureLow, \"\\xB0\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Rain Chance\", day.precipProbability), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Wind Speed \", day.windSpeed, \" | Gust \", day.windGust));\n  });\n  return React.createElement(\"div\", {\n    className: \"dailyForcast\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, dailyForcast);\n};\n\nexport default DailyForcast;","map":{"version":3,"sources":["/Users/computer/homework/React-API/fullstack-react/src/WeatherContainer/DailyForcast.js"],"names":["React","DailyForcast","dailyForcast","map","day","i","aHigh","Date","apparentTemperatureHighTime","monthsHigh","monthHigh","getMonth","dateHigh","getDate","highHour","getHours","convertedHighHour","formattedHighTime","aLow","apparentTemperatureLowTime","monthsLow","monthLow","dateLow","LowHour","convertedLowHour","formattedLowTime","console","log","apparentTemperatureHigh","apparentTemperatureLow","precipProbability","windSpeed","windGust"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,4BAAsB;AAAA,MAAnBA,YAAmB,QAAnBA,YAAmB;AAEvC,MAAIC,YAAY,GAAGD,YAAY,CAACE,GAAb,CAAiB,UAACC,GAAD,EAAMC,CAAN,EAAY;AAE5C;AACA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,CAASH,GAAG,CAACI,2BAAJ,GAAkC,IAA3C,CAAZ;AACA,QAAIC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAjB;AACA,QAAIC,SAAS,GAAGD,UAAU,CAACH,KAAK,CAACK,QAAN,EAAD,CAA1B;AACA,QAAIC,QAAQ,GAAGN,KAAK,CAACO,OAAN,EAAf;AACA,QAAIC,QAAQ,GAAGR,KAAK,CAACS,QAAN,EAAf;;AAEA,QAAID,QAAQ,KAAK,EAAjB,EAAqB;AACjB,UAAIE,iBAAiB,GAAG,MAAxB;AACH,KAFD,MAEO,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,KAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,MAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,EAAjB,EAAqB;AACxB,UAAIE,iBAAiB,GAAG,MAAxB;AACH,KAFM,MAEA,IAAIF,QAAQ,KAAK,CAAjB,EAAoB;AACvB,UAAIE,iBAAiB,GAAG,MAAxB;AACH,KAFM,MAEA;AACH,UAAIA,iBAAiB,GAAGF,QAAQ,GAAG,IAAnC;AACH;;AAED,QAAIG,iBAAiB,GAAGP,SAAS,GAAG,GAAZ,GAAkBE,QAAlB,GAA6B,GAA7B,GAAmCI,iBAA3D,CAvC4C,CA0C5C;;AACA,QAAIE,IAAI,GAAG,IAAIX,IAAJ,CAASH,GAAG,CAACe,0BAAJ,GAAiC,IAA1C,CAAX;AACA,QAAIC,SAAS,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAhB;AACA,QAAIC,QAAQ,GAAGD,SAAS,CAACF,IAAI,CAACP,QAAL,EAAD,CAAxB;AACA,QAAIW,OAAO,GAAGJ,IAAI,CAACL,OAAL,EAAd;AACA,QAAIU,OAAO,GAAGL,IAAI,CAACH,QAAL,EAAd;;AAEA,QAAIQ,OAAO,KAAK,EAAhB,EAAoB;AAChB,UAAIC,gBAAgB,GAAG,MAAvB;AACH,KAFD,MAEO,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,KAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,MAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvB,UAAIC,gBAAgB,GAAG,MAAvB;AACH,KAFM,MAEA,IAAID,OAAO,KAAK,CAAhB,EAAmB;AACtB,UAAIC,gBAAgB,GAAG,MAAvB;AACH,KAFM,MAEA;AACH,UAAIA,gBAAgB,GAAGD,OAAO,GAAG,IAAjC;AACH;;AAED,QAAIE,gBAAgB,GAAGJ,QAAQ,GAAG,GAAX,GAAiBC,OAAjB,GAA2B,GAA3B,GAAiCE,gBAAxD;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYvB,GAAZ;AACA,WACI;AAAK,MAAA,GAAG,EAAEC,CAAV;AAAa,MAAA,SAAS,EAAC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaY,iBAAb,gBAA0CQ,gBAA1C,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKrB,GAAG,CAACwB,uBAAT,aAAsCxB,GAAG,CAACyB,sBAA1C,SAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBzB,GAAG,CAAC0B,iBAApB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgB1B,GAAG,CAAC2B,SAApB,cAAuC3B,GAAG,CAAC4B,QAA3C,CAJJ,CADJ;AAQH,GA1FkB,CAAnB;AA2FA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9B,YADL,CADJ;AAMH,CAnGD;;AAoGA,eAAeD,YAAf","sourcesContent":["import React from 'react'\n\nconst DailyForcast = ({ DailyForcast }) => {\n\n    let dailyForcast = DailyForcast.map((day, i) => {\n\n        //converts UNIX time into military time\n        let aHigh = new Date(day.apparentTemperatureHighTime * 1000);\n        let monthsHigh = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let monthHigh = monthsHigh[aHigh.getMonth()];\n        let dateHigh = aHigh.getDate();\n        let highHour = aHigh.getHours();\n\n        if (highHour === 12) {\n            var convertedHighHour = '12PM'\n        } else if (highHour === 13) {\n            var convertedHighHour = '1PM'\n        } else if (highHour === 14) {\n            var convertedHighHour = '2PM'\n        } else if (highHour === 15) {\n            var convertedHighHour = '3PM'\n        } else if (highHour === 16) {\n            var convertedHighHour = '4PM'\n        } else if (highHour === 17) {\n            var convertedHighHour = '5PM'\n        } else if (highHour === 18) {\n            var convertedHighHour = '6PM'\n        } else if (highHour === 19) {\n            var convertedHighHour = '7PM'\n        } else if (highHour === 20) {\n            var convertedHighHour = '8PM'\n        } else if (highHour === 21) {\n            var convertedHighHour = '9PM'\n        } else if (highHour === 22) {\n            var convertedHighHour = '10PM'\n        } else if (highHour === 23) {\n            var convertedHighHour = '11PM'\n        } else if (highHour === 0) {\n            var convertedHighHour = '12AM'\n        } else {\n            var convertedHighHour = highHour + 'AM'\n        }\n\n        let formattedHighTime = monthHigh + ' ' + dateHigh + ' ' + convertedHighHour;\n\n\n        //converts UNIX time into military time\n        let aLow = new Date(day.apparentTemperatureLowTime * 1000);\n        let monthsLow = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        let monthLow = monthsLow[aLow.getMonth()];\n        let dateLow = aLow.getDate();\n        let LowHour = aLow.getHours();\n\n        if (LowHour === 12) {\n            var convertedLowHour = '12PM'\n        } else if (LowHour === 13) {\n            var convertedLowHour = '1PM'\n        } else if (LowHour === 14) {\n            var convertedLowHour = '2PM'\n        } else if (LowHour === 15) {\n            var convertedLowHour = '3PM'\n        } else if (LowHour === 16) {\n            var convertedLowHour = '4PM'\n        } else if (LowHour === 17) {\n            var convertedLowHour = '5PM'\n        } else if (LowHour === 18) {\n            var convertedLowHour = '6PM'\n        } else if (LowHour === 19) {\n            var convertedLowHour = '7PM'\n        } else if (LowHour === 20) {\n            var convertedLowHour = '8PM'\n        } else if (LowHour === 21) {\n            var convertedLowHour = '9PM'\n        } else if (LowHour === 22) {\n            var convertedLowHour = '10PM'\n        } else if (LowHour === 23) {\n            var convertedLowHour = '11PM'\n        } else if (LowHour === 0) {\n            var convertedLowHour = '12AM'\n        } else {\n            var convertedLowHour = LowHour + 'AM'\n        }\n\n        let formattedLowTime = monthLow + ' ' + dateLow + ' ' + convertedLowHour;\n\n        console.log(day)\n        return (\n            <div key={i} className=\"day\">\n                <h4>High at {formattedHighTime} | Low at {formattedLowTime}</h4>\n                <h1>{day.apparentTemperatureHigh}° | {day.apparentTemperatureLow}°</h1>\n                <h3>Rain Chance{day.precipProbability}</h3>\n                <h3>Wind Speed {day.windSpeed} | Gust {day.windGust}</h3>\n            </div>\n        )\n    })\n    return (\n        <div className=\"dailyForcast\">\n            {dailyForcast}\n        </div>\n    )\n\n}\nexport default DailyForcast\n"]},"metadata":{},"sourceType":"module"}